When would you want to use a remote repository rather than keeping all your work
local?

    When I want to work from different machines, or when more people want to collaborate

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because I might not want to have all changes all the time. 
    Additionally, having a change while I am in the middle of making another change, might interfere with what I am working on.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks clone some GitHub repository on GitHub itself. Clone copies a repository locally (even a local one).
    A branch just labels a specific commit, and can be used to make different changes in parallel, that do not affect each of the other branches.
    A fork would be used to work on what someone else is already working and is available on GitHub.
    A branch would be used to experiment with changes in my repository.
    Clone would be to create a local copy of a repository, and be able to work with it locally.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can easily see what changes you made to your local repository compared to the remote one.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would collaborate by storing the files online, and manually finding differences every time something should be "checked in".
    It would be harder, because it would be difficult to keep track of changes and versions, especially when several people collaborate.
    

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Because then the changes can be reviewed and approved by others before becoming a part of the master branch